from pygame import *
from random import randint
from time import time as timer

img_back = '123456.jpg'
img_racket = '1.png'
img_ball = 'asteroid.png'

win_w = 500
win_h = 500
display.set_caption('PONG-PING')
window = display.set_mode((win_w, win_h))
background = transform.scale(image.load(img_back), (win_w, win_h))


class GameSprite(sprite.Sprite):
    def __init__(self, player_image, player_x, player_y, size_x, size_y, player_speed):
        super().__init__()
        self.image = transform.scale(image.load(player_image),(size_x, size_y))
        self.speed = player_speed
        self.rect = self.image.get_rect()
        self.rect.x = player_x
        self.rect.y = player_y
    def reset(self):
        window.blit(self.image, (self.rect.x, self.rect.y))

class Player(GameSprite):
    def update_L(self):
        keys = key.get_pressed()
        if keys[K_w] and self.rect.y > 5:
            self.rect.y -= self.speed
        if keys[K_s] and self.rect.y < win_h - 80:
            self.rect.y += self.speed
    def update_R(self):
        keys = key.get_pressed()
        if keys[K_UP] and self.rect.y > 5:
            self.rect.y -= self.speed
        if keys[K_DOWN] and self.rect.y < win_h - 80:
            self.rect.y += self.speed

racket1 = Player(img_racket, 40, 200, 40 ,200, 10)
racket2 = Player(img_racket, 420, 200, 40, 200, 10)
ball = GameSprite(img_ball, 225, 200, 50, 50, 10)
speed_x = 5
speed_y = 5

font.init()
font = font.SysFont('veranda', 70)
loseL = font.render('player on the left lose', True, (100,0,0))
loseR = font.render('player on the Right lose', True, (100,0,0))
reset = font.render('R - to restart', True, (180,0,0))

finish = False
run = True

while run:
    
    for e in event.get():
        if e.type == QUIT:
            run = False
        if e.type == KEYDOWN:
            if e.key == K_r:
                finish = False
                ball.rect.x = 225
                ball.rect.y = 200
    if not finish:
        window.blit(background, (0,0))
        racket1.update_L()
        racket2.update_R()
        ball.rect.x += speed_x
        ball.rect.y += speed_y
        if racket1.rect.colliderect(ball.rect) or racket2.rect.colliderect(ball.rect):
            speed_x *= -1
        if ball.rect.y > win_h - 50 or ball.rect.y < 0:
            speed_y *= -1
        if ball.rect.x < 0:
            finish = True
            window.blit(loseL, (200, 200))
            #run = False
        if ball.rect.x > win_w:
            finish = True
            window.blit(loseL, (200, 200))
            #run = False
        racket1.reset()
        racket2.reset()
        ball.reset()
    display.update()
    time.delay(30)
